## Population probability
corrandplot<-function(dataset=dm,var1name=NULL,var2name=NULL) {
var1=dataset[,var1name]
var2=dataset[,var2name]
corrandplot<-function(dataset=dm,var1name=NULL,var2name=NULL) {
var1=dataset[,var1name]
var2=dataset[,var2name]
# ct<-cor.test(var1,var2,method='spearman')
# rho<-ct$estimate
# pval<-ct$p.value
pdf(height = 6,width = 6,file = paste(var1name,"_-_",var2name,".pdf",sep=""))
plot(pch=19,x = var2,y = var1,ylab=var1name,xlab=var2name,col=colors11[dataset$kgroup])
lmod<-lm(var1~var2)
abline(lmod)
pval<-summary(lmod)$coefficients[2,4]
beta<-summary(lmod)$coefficients[2,1]
r2<-summary(lmod)$r.squared
Corner_text <- function(text, location="topright"){
legend(location,legend=text, bty ="n", pch=NA)
}
mylabel = bquote(italic(R)^2 == .(format(r2, digits = 3)))
Corner_text(mylabel,location='topright')
mylabel = bquote(italic(p) == .(format(pval, digits = 3)))
Corner_text(mylabel,location='top')
dev.off()
}
corrandplot<-function(dataset=dm,var1name=NULL,var2name=NULL) {
var1=dataset[,var1name]
var2=dataset[,var2name]
# ct<-cor.test(var1,var2,method='spearman')
# rho<-ct$estimate
# pval<-ct$p.value
pdf(height = 6,width = 6,file = paste(var1name,"_-_",var2name,".pdf",sep=""))
plot(pch=19,x = var2,y = var1,ylab=var1name,xlab=var2name,col=colors11[dataset$kgroup])
lmod<-lm(var1~var2)
abline(lmod)
pval<-summary(lmod)$coefficients[2,4]
beta<-summary(lmod)$coefficients[2,1]
r2<-summary(lmod)$r.squared
Corner_text <- function(text, location="topright"){
legend(location,legend=text, bty ="n", pch=NA)
}
mylabel = bquote(italic(R)^2 == .(format(r2, digits = 3)))
Corner_text(mylabel,location='topright')
mylabel = bquote(italic(p) == .(format(pval, digits = 3)))
Corner_text(mylabel,location='top')
dev.off()
}
}
corrandplot<-function(dataset=dm,var1name=NULL,var2name=NULL) {
var1=dataset[,var1name]
var2=dataset[,var2name]
# ct<-cor.test(var1,var2,method='spearman')
# rho<-ct$estimate
# pval<-ct$p.value
pdf(height = 6,width = 6,file = paste(var1name,"_-_",var2name,".pdf",sep=""))
plot(pch=19,x = var2,y = var1,ylab=var1name,xlab=var2name,col=colors11[dataset$kgroup])
lmod<-lm(var1~var2)
abline(lmod)
pval<-summary(lmod)$coefficients[2,4]
beta<-summary(lmod)$coefficients[2,1]
r2<-summary(lmod)$r.squared
Corner_text <- function(text, location="topright"){
legend(location,legend=text, bty ="n", pch=NA)
}
mylabel = bquote(italic(R)^2 == .(format(r2, digits = 3)))
Corner_text(mylabel,location='topright')
mylabel = bquote(italic(p) == .(format(pval, digits = 3)))
Corner_text(mylabel,location='top')
dev.off()
}
corrandplot(dataset =dm,var1name = 'm1d_polqua',var2name = 'k1' )
function (x, i, j, drop = if (missing(i)) TRUE else length(cols) ==
dm
dm
names(dm)
load("../MASTER_DATA.RData")
dm<-dataMerge
##=========================================================================
## between variables
cor.test(dm$m1d_polqua,dm$T_repro)
corrandplot(dataset =dm,var1name = 'm1d_polqua',var2name = 'k1' )
varpca<-read.table('../genomepca.eigenval')
varprop<-round(varpca/sum(varpca),digits = 2)
xpca<-read.table('../genomepca.eigenvec')
head(xpca)
colnames(xpca)[-c(1:2)] <-  paste(rep("PC",dim(varprop)[1]) , 1:dim(varprop)[1] ,"_",varprop$V1,sep="")
head(xpca)
mdm<-merge(dm,by.x="id",xpca[,c(1,3:5) ],by.y="V1")
dim(mdm)
head(mdm)
mdm<-mdm[-which(mdm$id==9542),]
corrandplot(mdm,var1name = 'T_repro',var2name = 'PC1_0.14' )
corrandplot(mdm,var1name = 'T_repro',var2name = 'PC2_0.1' )
corrandplot(mdm,var1name = 'T_repro',var2name = 'PC3_0.07')
corrandplot(mdm,var1name = 'bio_18',var2name = 'PC1_0.14' )
corrandplot(mdm,var1name = 'bio_18',var2name = 'PC2_0.1' )
corrandplot(mdm,var1name = 'bio_18',var2name = 'PC3_0.07')
corrandplot(mdm,var1name = 'bio_1',var2name = 'PC1_0.14' )
corrandplot(mdm,var1name = 'bio_1',var2name = 'PC2_0.1' )
corrandplot(mdm,var1name = 'bio_1',var2name = 'PC3_0.07')
head(dsub)
hist(dsub)
diag(dsub)
diag(dsub)<-NA
hist(dsub)
table(is.na(dsub))
max(dsub)
hist(dsub/max(dsub,na.rm = T))
hist(log10(dsub))
log10(800)
log10(0.0001)
tmpfun<-function(y){
ct<-cor.test(method="spearman",x=dataMerge$m1d_polqua, y=log10(y))
return(ct$p.value)
}
allp<-apply(dsub,2,FUN = function(x){tmpfun(x)})
ct<-cor.test(method="pearson",x=dataMerge$m1d_polqua, y=log10(y))
# ct<-cor.test(method="spearman",x=dataMerge$m1d_polqua, y=y)
return(ct$p.value)
}
allp<-apply(dsub,2,FUN = function(x){tmpfun(x)})
tmpfun<-function(y){
ct<-cor.test(method="pearson",x=dataMerge$m1d_polqua, y=log10(y))
# ct<-cor.test(method="spearman",x=dataMerge$m1d_polqua, y=y)
return(ct$p.value)
}
allp<-apply(dsub,2,FUN = function(x){tmpfun(x)})
plot(-log10(allp)~dataMerge$m1d_polqua)
plot(-log10(allp)~dataMerge$kgroup)
boxplot(-log10(allp)~dataMerge$kgroup,col=colors11)
abline(h = -log10(0.05),col="darkgrey",lty=2)
cor.test(-log10(allp),dataMerge$m1d_polqua)
plot(-log10(allp)~dataMerge$alt)
plot(-log10(allp)~dataMerge$bio_18)
plot(-log10(allp)~dataMerge$latitude.x)
head(dsub)
hist(log10(dsub))
diag(dsub)<-NA
table(is.na(dsub))
meltdsub<-melt(dsub)
library(reshape)
meltdsub<-melt(dsub)
meltdsub
hist(meltdsub)
hist(meltdsub[,3])
max(allp)
which(allp==min(allp))
top<-which(allp==min(allp))
top
name(top)
name(top)
colname(top)
plot(dsub[,"9427"])
dsub[,"9427"]
mdm
toplot<-dsub[,"9427"]
toplot
toplot<-data.frame(dsub[,"9427"])
toplot
dataMerge$kgroup
-log10(allp)
length(-log10(allp))
length(toplot)
length(toplot[,1])
plot(dsub[,"9427"] ~ dataMerge$kgroup)
boxplot(dsub[,"9427"] ~ dataMerge$kgroup)
boxplot(dsub[,"9427"] ~ dataMerge$kgroup,col=colors11)
abline(h = -log10(0.05),col="darkgrey",lty=2)
min(allp)
top<-which(allp<0.0015)
top
top<-which(allp<0.002)
top
top<-which(allp<0.005)
top
colnmes(top)
colname(top)
colnames(top)
names(top)
top<-names(top)
boxplot(dsub[,top[1]] ~ dataMerge$kgroup,col=colors11)
boxplot(dsub[,top[2]] ~ dataMerge$kgroup,col=colors11)
i=1
boxplot(dsub[,top[i]] ~ dataMerge$kgroup,col=colors11, main=top[i])
for (i in 1:length(top)){
boxplot(dsub[,top[i]] ~ dataMerge$kgroup,col=colors11, main=top[i])
abline(h = -log10(0.05),col="darkgrey",lty=2)
}
pdf("chunkcount_topdrougth_intoothers.pdf",width = 6,height = 5)
for (i in 1:length(top)){
boxplot(dsub[,top[i]] ~ dataMerge$kgroup,col=colors11, main=top[i])
abline(h = -log10(0.05),col="darkgrey",lty=2)
}
dev.off()
max(dsub[,top[i]] )
dsub[,top[i]]
top
max(dsub[,"9427"] )
dsub[,"9427"]
which(dsub[,"9427"] == max(dsub[,"9427"],na.rm = T ) )
max(dsub[,"9427"],na.rm = T )
hist(dsub[,"9427"])
which(dsub[,"9427"] > 8,na.rm = T ) )
which(dsub[,"9427"] > 8 )
hist(dsub[,"6025"])
hist(dsub[,"6025"])
which(dsub[,"6025"] > 8 )
ct<-cor.test(method="pearson",x=dataMerge$m1d_polqua, y=log10(y),alternative="greater")
ct
tmpfun<-function(y){
ct<-cor.test(method="pearson",x=dataMerge$m1d_polqua, y=log10(y),alternative="greater")
# ct<-cor.test(method="spearman",x=dataMerge$m1d_polqua, y=y)
return(ct$p.value)
}
allp<-apply(dsub,2,FUN = function(x){tmpfun(x)})
table(allp<0.01)
allp
plot(-log10(allp)~dataMerge$m1d_polqua)
plot(-log10(allp)~dataMerge$kgroup)
source("../colors_popgroups.R")
boxplot(-log10(allp)~dataMerge$kgroup,col=colors11)
abline(h = -log10(0.05),col="darkgrey",lty=2)
tmpfun<-function(y){
ct<-cor.test(method="pearson",x=dataMerge$m1d_polqua, y=log10(y),alternative="lower")
# ct<-cor.test(method="spearman",x=dataMerge$m1d_polqua, y=y)
return(ct$p.value)
}
allp<-apply(dsub,2,FUN = function(x){tmpfun(x)})
tmpfun<-function(y){
ct<-cor.test(method="pearson",x=dataMerge$m1d_polqua, y=log10(y),alternative="less")
# ct<-cor.test(method="spearman",x=dataMerge$m1d_polqua, y=y)
return(ct$p.value)
}
allp<-apply(dsub,2,FUN = function(x){tmpfun(x)})
boxplot(-log10(allp)~dataMerge$kgroup,col=colors11)
tmpfun<-function(y){
ct<-cor.test(method="pearson",x=dataMerge$m1d_polqua, y=log10(y),alternative="greater")
# ct<-cor.test(method="spearman",x=dataMerge$m1d_polqua, y=y)
return(ct$p.value)
}
allp<-apply(dsub,2,FUN = function(x){tmpfun(x)})
plot(-log10(allp)~dataMerge$m1d_polqua)
boxplot(-log10(allp)~dataMerge$kgroup,col=colors11)
pdf("chunkcount_corr_drought_res.pdf",width = 6,height = 5)
boxplot(-log10(allp)~dataMerge$kgroup,col=colors11)
abline(h = -log10(0.05),col="darkgrey",lty=2)
dev.off()
cor.test(-log10(allp),dataMerge$m1d_polqua)
plot(-log10(allp)~dataMerge$alt)
plot(-log10(allp)~dataMerge$bio_18)
plot(-log10(allp)~dataMerge$latitude.x)
head(dsub)
hist(log10(dsub))
diag(dsub)<-NA
table(is.na(dsub))
library(reshape)
meltdsub<-melt(dsub)
hist(meltdsub[,3])
top<-which(allp<0.005)
top<-names(top)
toplot<-data.frame(dsub[,"9427"])
top
pdf("chunkcount_topdrougth_intoothers.pdf",width = 6,height = 5)
for (i in 1:length(top)){
boxplot(dsub[,top[i]] ~ dataMerge$kgroup,col=colors11, main=top[i])
abline(h = -log10(0.05),col="darkgrey",lty=2)
}
dev.off()
hist(dsub[,"6025"])
which(dsub[,"6025"] > 8 )
names(dsub[,"6025"])
which(dsub[,"6025"] > 8 )
topchunks<-names(which(dsub[,"6025"] > 8 ))
topchunks
plot(dataMerge$m1d_polqua)
topchunks
points(pch=16,subset(dataMerge,dataMerge$id %in% topchunks))
plot(dataMerge$m1d_polqua ~dataMerge$T_repro)
points(pch=16,subset(dataMerge,dataMerge$id %in% topchunks)m1d_polqua~subset(dataMerge,dataMerge$id %in% topchunks)$T_repro)
points(pch=16,subset(dataMerge,dataMerge$id %in% topchunks)$m1d_polqua~subset(dataMerge,dataMerge$id %in% topchunks)$T_repro)
which(dsub[,"6025"] > 7 )
topchunks<-names(which(dsub[,"6025"] > 8 ))
plot(dataMerge$m1d_polqua ~dataMerge$T_repro)
points(pch=16,subset(dataMerge,dataMerge$id %in% topchunks)$m1d_polqua~subset(dataMerge,dataMerge$id %in% topchunks)$T_repro)
top
hist(dsub[,"9427"])
which(dsub[,"9427"] > 7 )
topchunks<-names(which(dsub[,"9427"] > 8 ))
plot(dataMerge$m1d_polqua ~dataMerge$T_repro)
points(pch=16,subset(dataMerge,dataMerge$id %in% topchunks)$m1d_polqua~subset(dataMerge,dataMerge$id %in% topchunks)$T_repro)
plot(dataMerge$m1d_polqua ~dsub[,"9427"])
cor.test(dataMerge$m1d_polqua ~dsub[,"9427"],alternative="greater")
cor.test(dataMerge$m1d_polqua ,dsub[,"9427"],alternative="greater")
which(allp<0.005)
mini(allp)
min(allp)
which(allp==min(allp))
cor.test(dataMerge$m1d_polqua ,log10(dsub[,"9427"]),alternative="greater")
plot(dataMerge$m1d_polqua ~ log10(dsub[,"9427"]))
cor.test(dataMerge$m1d_polqua ,log10(dsub[,"9427"]),alternative="greater")
dsub[,"9427"] == dsub["9427",]
plot(dataMerge$m1d_polqua ~ log10(dsub["9427",]))
cor.test(dataMerge$m1d_polqua ,log10(dsub["9427",]),alternative="greater")
cor.test(x=dataMerge$m1d_polqua y=log10(dsub["9427",]),alternative="greater")
plot(dataMerge$m1d_polqua ~ log10(dsub[,"9427"]))
plot(x=dataMerge$m1d_polqua ,y=log10(dsub["9427",]))
plot(dataMerge$m1d_polqua ~ log10(dsub[,"9427"]))
plot(x=dataMerge$m1d_polqua ,y=log10(dsub["9427",]))
ebiopath<-'/home/moisesexpositoalonso/ebio_remote'
setwd("~/work_remote/abt6_projects9/ath_1001G_image_pheno/experiment_218_droughtgwa/ancestrytest")
=========================================================================
### colors and phenotypes
load("../MASTER_DATA.RData")
dm<-dataMerge
source('../colors_popgroups.R')
##======================================
##=========================================================================
## between variables
cor.test(dm$m1d_polqua,dm$T_repro)
corrandplot(dataset =dm,var1name = 'm1d_polqua',var2name = 'T_repro')
corrandplot(mdm,var1name = 'm1d_polqua',var2name = 'bio_18')
corrandplot(mdm,var1name = 'm1d_polqua',var2name = 'bio_17')
source('../colors_popgroups.R')
corrandplot<-function(dataset=dm,var1name=NULL,var2name=NULL) {
var1=dataset[,var1name]
var2=dataset[,var2name]
# ct<-cor.test(var1,var2,method='spearman')
# rho<-ct$estimate
# pval<-ct$p.value
pdf(height = 6,width = 6,file = paste(var1name,"_-_",var2name,".pdf",sep=""),useDingbats = F)
plot(pch=19,x = var2,y = var1,ylab=var1name,xlab=var2name,col=colors11[dataset$kgroup])
lmod<-lm(var1~var2)
abline(lmod)
pval<-summary(lmod)$coefficients[2,4]
beta<-summary(lmod)$coefficients[2,1]
r2<-summary(lmod)$r.squared
Corner_text <- function(text, location="topright"){
legend(location,legend=text, bty ="n", pch=NA)
}
mylabel = bquote(italic(R)^2 == .(format(r2, digits = 3)))
Corner_text(mylabel,location='topright')
mylabel = bquote(italic(p) == .(format(pval, digits = 3)))
Corner_text(mylabel,location='top')
dev.off()
}
## PCA
varpca<-read.table("../762analysis/genomepca.eigenval")
# varpca<-read.table('../genomepca.eigenval')
varprop<-round(varpca/sum(varpca),digits = 2)
print(varprop)
xpca<-read.table('../762analysis/genomepca.eigenvec')
# xpca<-read.table('../genomepca.eigenvec')
head(xpca)
colnames(xpca)[-c(1:2)] <-  paste(rep("PC",dim(varprop)[1]) , 1:dim(varprop)[1] ,"_",varprop$V1,sep="")
head(xpca)
# mdm<-merge(acc,by.x="id",xpca[,c(1,3:5) ],by.y="V1",all.y=T)
mdm<-merge(dm,by.x="id",xpca[,c(1,3:5) ],by.y="V1",all.y=T)
dim(mdm)
head(mdm)
# mdm<-mdm[-which(mdm$id==9542),]
pdf('pca_12_structure.pdf',width=5,height = 5,useDingbats = F)
plot(pch=19, x=mdm[,grep("PC1",colnames(mdm))], xlab="PC1", y=mdm[,grep("PC2",colnames(mdm))],ylab="PC2", col=colors11[mdm$kgroup])
dev.off()
pdf('pca_13_structure.pdf',width=6,height = 6,useDingbats = F)
plot(pch=19, x=mdm[,grep("PC3",colnames(mdm))], xlab="PC3", y=mdm[,grep("PC1",colnames(mdm))],ylab="PC1", col=colors11[mdm$kgroup])
dev.off()
pdf('pca_23_structure.pdf',width=6,height = 6,useDingbats = F)
plot(pch=19, x=mdm[,grep("PC2",colnames(mdm))], xlab="PC2", y=mdm[,grep("PC3",colnames(mdm))],ylab="PC3", col=colors11[mdm$kgroup])
dev.off()
setwd("~/fineancestry")
setwd("~/fineancestry")
source("ancestrygwa_functions.R")
library(ape)
source("ancestrygwa_functions.R")
setwd("~/ebio/abt6_projects9/ath_1001G_image_pheno/experiment_218_droughtgwa/fineancestry")
system('find . -name "agwa_permuted_chr*.RObject" > permutobjects.txt')
aGWAfiles<-as.character.factor(read.table('permutobjects.txt')[,1] )
system('find . -name "*agwa_permuted_chr*.RObject" > permutobjects.txt')
aGWAfiles<-as.character.factor(read.table('permutobjects.txt')[,1] )
aGWAfiles
i01
i=1
load(aGWAfiles_parse_raw_files[i])
aGWAfiles[i]
aGWAfiles
aGWAfiles<-as.character.factor(read.table('permutobjects.txt')[,1] )
aGWAfiles
load(aGWAfiles[i])
emp<-c(emp,gwares_permuted)
emp<-c()
summary(gwares_permuted)
dim (gwares_permuted)
length(gwares_permuted)
head (gwares_permuted)
tail(gwares_permuted)
emp<-c()
for (i in aGWAfiles){
load(aGWAfiles[i])
emp<-c(emp,gwares_permuted)
}
gwares_permuted=emp
for (i in 1:length(aGWAfiles) ){
load(aGWAfiles[i])
emp<-c(emp,gwares_permuted)
}
gwares_permuted=emp
gwares_permuted
length(gwares_permuted)
save(file="agwa_permuted_all.RObject",gwares_permuted)
source('ancestrygwa_functions.R')
args<-commandArgs(TRUE)
chr<-args[1]; chr=2
#agwafile<-args[1] ; agwafile<-'agwa_chr2.RObject'
agwafile<-paste('agwa_chr',chr,'.RObject')
#permfile<-args[2] ; permfile<-'agwa_permuted_chr2.RObject'
# permfile<-paste( 'agwa_permuted_chr',chr,'.RObject')
permfile<-paste( 'agwa_permuted_all.RObject')
load(agwafile)
chr
paste('agwa_chr',chr,'.RObject')
paste('agwa_chr',chr,'.RObject'
agwafile<-paste('agwa_chr',chr,'.RObject',sep="")
agwafile
chr
agwafile<-paste('agwa_chr',chr,'.RObject',sep="")
agwafile
#permfile<-args[2] ; permfile<-'agwa_permuted_chr2.RObject'
# permfile<-paste( 'agwa_permuted_chr',chr,'.RObject')
permfile<-paste( 'agwa_permuted_all.RObject')
permfile
load(agwafile)
agwa=gwares
agwa
hist(as.numeric(as.matrix(agwa)))
load(permfile)
permgwa=gwares_permuted
permgwa
hist(as.numeric(as.matrix(permgwa)))
qqGWA(permgwa)
qqGWA(agwa)
5*10
5*10*100
setwd("~/fineancestry")
samplefile
samplefile<-paste('chromopainterparsedout/chr',chr,'-fs.samples.out_parsedGM',sep='')
samplefile
samplefile
list.files(pattern=samplefile)
list.files()
%in% list.files()
samplefile %in% list.files()
paste(sep="",samplefile ,".RObject")
paste(sep="",samplefile ,".RObject") %in% list.files(path="chromopainterparsedout")
list.files(path="chromopainterparsedout")
samplefile
list.files(path="")
list.files()
paste(sep="/",chromopainterparsedout,list.files(path="chromopainterparsedout"))
paste(sep="/","chromopainterparsedout",list.files(path="chromopainterparsedout"))
paste(sep="",samplefile ,".RObject") %in% paste(sep="/","chromopainterparsedout",list.files(path="chromopainterparsedout"))
readsampleout(samplefile )
sampleout[1:10,1:10]
readsampleout<-function(samplefile){
cat("\nreading the parsed .sample.out file...\n")
if( paste(sep="",samplefile ,".RObject") %in% paste(sep="/","chromopainterparsedout",list.files(path="chromopainterparsedout")) ) {
load(paste(sep="",samplefile ,".RObject"))
}else{
sampleout<-read.table(samplefile , header=F,fill=T)
save(sampleout,file=paste(sep="",samplefile ,".RObject"))
}
#cat("this is an example of how it looks a painted chromosome \n")
#print(sampleout[1:10,1:10])
return(sampleout)
cat("\n...done\n")
}
readsampleout(samplefile )
paste(sep="",samplefile ,".RObject") %in% paste(sep="/","chromopainterparsedout",list.files(path="chromopainterparsedout"))
setwd("~/fineancestry")
paste(sep="",samplefile ,".RObject")
chr<-args[2] ;# chr<-2
#samplefile<-args[3]; #samplefile<-"chromopainterparsedout/chr2-fs.samples.out_parsedGM"
samplefile<-paste('chromopainterparsedout/chr',chr,'-fs.samples.out_parsedGM',sep='')
args<-commandArgs(TRUE)
labelinputfile<-args[1] ; labelinputfile<-"label_input_genomes.tsv"
chr<-args[2] ;# chr<-2
#samplefile<-args[3]; #samplefile<-"chromopainterparsedout/chr2-fs.samples.out_parsedGM"
samplefile<-paste('chromopainterparsedout/chr',chr,'-fs.samples.out_parsedGM',sep='')
samplefile
paste(sep="",samplefile ,".RObject")
chr<-2
samplefile<-paste('chromopainterparsedout/chr',chr,'-fs.samples.out_parsedGM',sep='')
paste(sep="",samplefile ,".RObject")
paste(sep="",samplefile ,".RObject") %in% paste(sep="/","chromopainterparsedout",list.files(path="chromopainterparsedout"))
load(paste(sep="",samplefile ,".RObject"))
labelinputfile[1:10]
samplefile
readsampleout<-function(samplefile){
cat("\nreading the parsed .sample.out file...\n")
if( paste(sep="",samplefile ,".RObject") %in% paste(sep="/","chromopainterparsedout",list.files(path="chromopainterparsedout")) ) {
cat("\n found the corresponding sample.out.RObject file...\n")
load(paste(sep="",samplefile ,".RObject"))
}else{
cat("\n as matrix ... \n")
sampleout<-read.table(samplefile , header=F,fill=T)
save(sampleout,file=paste(sep="",samplefile ,".RObject"))
}
#cat("this is an example of how it looks a painted chromosome \n")
#print(sampleout[1:10,1:10])
return(sampleout)
cat("\n...done\n")
}
